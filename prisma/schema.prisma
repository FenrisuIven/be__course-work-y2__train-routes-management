generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ArrivalTime {
  id          Int      @id @default(autoincrement())
  trackerID   Int      @unique
  arrivalTime DateTime
  current_ID  Int      @unique
  next_ID     Int      @unique

  currentStop TrainStop @relation("CurrentStop_ArrivalTime", fields: [current_ID], references: [id])
  nextStop    TrainStop @relation("NextStop_ArrivalTime", fields: [next_ID], references: [id])

  tracker Tracker @relation(fields: [trackerID], references: [id])
}

model Voyage {
  id      Int     @id @default(autoincrement())
  name    String
  routeID Int     @unique

  trains  Train[]
  route   Route   @relation(fields: [routeID], references: [id])
}

model Route {
  id Int @id @default(autoincrement())
  name String

  stops TrainStop[]
  voyage Voyage?
}


model TrainStop {
  id        Int    @id @default(autoincrement())
  name      String // Stop name: ("Львів Автовокзал")
  longitude Float  // Longitude of location (eg. 49.839167)
  latitude  Float  // Latitude of location  (eg. 23.995000)
  stationID Int

  station   Station @relation(fields: [stationID], references: [id])
  routes    Route[] //one stop can possibly have 2 or more routes attached,
                    //if the routes in question intersect at this stop
  current_AT ArrivalTime? @relation("CurrentStop_ArrivalTime")
  next_AT    ArrivalTime? @relation("NextStop_ArrivalTime")
}

model Station {
  id      Int    @id @default(autoincrement())
  name    String // Station name       (eg. "Київ-Пасажирський")
  city    String // City of location   (eg. "Київ")
  region  String // Country region     (eg. "Київська [область]")
  street  String // Street of location (eg. "Вокзальна площа, 1")

  stops   TrainStop[]
}

model Train {
  id        Int     @id @default(autoincrement())
  name      String
  voyageID  Int?
  trackerID Int     @unique
  active    Boolean @default(false)

  voyage  Voyage?   @relation(fields: [voyageID], references: [id])
  tracker Tracker   @relation(fields: [trackerID], references: [id])
}

model Tracker {
  id Int @id @default(autoincrement())
  serial String

  train Train?
  arrivalTime ArrivalTime?
}
