generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Voyage {
  id      Int     @id @default(autoincrement())
  name    String
  routeID Int     @unique

  trains  Train[]
  route   Route   @relation(fields: [routeID], references: [id])
  schedule Schedule[]
}

model Route {
  id     Int         @id @default(autoincrement())
  name   String

  stops  TrainStop[] @relation("RouteToTrainStop")
  voyage Voyage?
}

model TrainStop {
  id        Int     @id @default(autoincrement())
  name      String
  stationID Int
  position  Unsupported("geography")?

  station   Station @relation(fields: [stationID], references: [id])
  routes    Route[] @relation("RouteToTrainStop")
  schedule  Schedule[]

  @@index([position], name: "position_idx", type: Gist)
}

model Station {
  id      Int    @id @default(autoincrement())
  name    String
  city    String
  region  String
  street  String

  stops   TrainStop[]
}

model Train {
  id        Int     @id @default(autoincrement())
  name      String
  voyageID  Int?
  trackerID Int     @unique
  active    Boolean @default(false)

  voyage    Voyage? @relation(fields: [voyageID], references: [id])
  tracker   Tracker @relation(fields: [trackerID], references: [id])
  schedule  Schedule[]
}

model Tracker {
  id     Int    @id @default(autoincrement())
  serial String

  train  Train?
}

model Schedule {
  id       Int @id @default(autoincrement())
  voyageID Int
  trainID  Int
  stopID   Int
  date     DateTime

  voyage   Voyage    @relation(fields: [voyageID], references: [id])
  train    Train     @relation(fields: [trainID], references: [id])
  stop     TrainStop @relation(fields: [stopID], references: [id])
}